<?xml version="1.0" encoding="UTF-8"?>
<class name="SxGlobalAudioFxPlayer" inherits="Node" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
    <brief_description>
        A wrapper around a SxAudioMultiStreamPlayer.
    </brief_description>
    <description>
        A wrapper around a SxAudioMultiStreamPlayer, to be used through inheritance as an autoload, which means:
        +
        1. Inherit the node in your game,
        2. Configure the `streams` parameter,
        3. And set it as **autoload**.
    </description>
    <tutorials></tutorials>
    <methods>
        <method name="get_voice">
            <return type="AudioStreamPlayer" />
            <argument index="0" name="voice" type="int" />
            <description>
                Get a voice by index.

                [source,gdscript]
                .Example
                ----
                # Suppose we have an instance of `SxGlobalAudioFxPlayer` as an autoload named `GameGlobalAudioFxPlayer`.
                var first_voice := GameGlobalAudioFxPlayer.get_voice(0)
                ----
            </description>
        </method>
        <method name="play">
            <return type="void" />
            <argument index="0" name="stream_name" type="String" />
            <argument index="1" name="voice" type="int" default="-1" />
            <description>
                Play a stream on an auto-selected voice, or a specific voice. +
                If the voice is set to `-1`, it will automatically select a voice.

                [source,gdscript]
                .Example
                ----
                # Suppose we have an instance of `SxGlobalAudioFxPlayer` as an autoload named `GameGlobalAudioFxPlayer`.
                GameGlobalAudioFxPlayer.play("sound_1")
                ----
            </description>
        </method>
    </methods>
    <members>
        <member name="max_voices" type="int" default="4">
            Maximum simultaneous voices.
        </member>
        <member name="audio_bus_output" type="String" default="Master">
            Audio bus output.
        </member>
        <member name="streams" type="Dictionary" default="{}">
            Audio streams to play, indexed by name.
        </member>
    </members>
    <constants></constants>
</class>