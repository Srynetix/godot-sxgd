<?xml version="1.0" encoding="UTF-8"?>
<class name="SxMath" inherits="Reference" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
    <brief_description>
        Math helpers.
    </brief_description>
    <description>
        Generic math helpers.
    </description>
    <tutorials></tutorials>
    <methods>
        <method name="lerp_vector3" qualifiers="static">
            <return type="Vector3" />
            <argument index="0" name="from" type="Vector3" />
            <argument index="1" name="to" type="Vector3" />
            <argument index="2" name="weight" type="float" />
            <description>
                Lerp a Vector3 towards another using a floating-point weight.

                [source,gdscript]
                .Example
                ----
                var vec3 := SxMath.lerp_vector3(vec1, vec2, 0.25)
                ----
            </description>
        </method>
        <method name="align_with_y" qualifiers="static">
            <return type="Transform" />
            <argument index="0" name="transform" type="Transform" />
            <argument index="1" name="new_y" type="Vector3" />
            <description>
                Align a transform with a Y vector.

                [source,gdscript]
                .Example
                ----
                var xform := SxMath.align_with_y(transform, Vector3(1, 1, 1))
                ----
            </description>
        </method>
        <method name="interpolate_align_with_y" qualifiers="static">
            <return type="Transform" />
            <argument index="0" name="transform" type="Transform" />
            <argument index="1" name="new_y" type="Vector3" />
            <argument index="2" name="weight" type="float" />
            <description>
                Align a transform with a Y vector using interpolation.

                [source,gdscript]
                .Example
                ----
                var xform := SxMath.interpolate_align_with_y(transform, Vector3(1, 1, 1), 0.25)
                ----
            </description>
        </method>
        <method name="map" qualifiers="static">
            <return type="float" />
            <argument index="0" name="value" type="float" />
            <argument index="1" name="istart" type="float" />
            <argument index="2" name="istop" type="float" />
            <argument index="3" name="ostart" type="float" />
            <argument index="4" name="ostop" type="float" />
            <description>
                Map a float value from one set of bounds to another.

                [source,gdscript]
                .Example
                ----
                # Change the value 10 from bounds (0, 10) to bounds (0, 1)
                var n := SxMath.map(10, 0, 10, 0, 1)
                # => n = 1

                # Change the value 5 from bounds (0, 10) to bounds (0, 1)
                var n := SxMath.map(5, 0, 10, 0, 1)
                # => n = 0.5
                ----
            </description>
        </method>
    </methods>
</class>